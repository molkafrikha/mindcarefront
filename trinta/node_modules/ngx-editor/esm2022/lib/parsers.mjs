import { DOMSerializer, DOMParser } from 'prosemirror-model';
import defaultSchema from './schema';
import { isHtml } from './trustedTypesUtil';
export const emptyDoc = {
    type: 'doc',
    content: [
        {
            type: 'paragraph',
        },
    ],
};
// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment
export const toHTML = (json, inputSchema) => {
    const schema = inputSchema ?? defaultSchema;
    const contentNode = schema.nodeFromJSON(json);
    const html = DOMSerializer.fromSchema(schema).serializeFragment(contentNode.content);
    const div = document.createElement('div');
    div.appendChild(html);
    return div.innerHTML;
};
export const toDoc = (html, inputSchema) => {
    const schema = inputSchema ?? defaultSchema;
    const el = document.createElement('div');
    el.innerHTML = html;
    return DOMParser.fromSchema(schema).parse(el).toJSON();
};
export const parseContent = (value, schema) => {
    if (!value) {
        return schema.nodeFromJSON(emptyDoc);
    }
    if (!isHtml(value)) {
        return schema.nodeFromJSON(value);
    }
    const docJson = toDoc(value, schema);
    return schema.nodeFromJSON(docJson);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2Vycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1lZGl0b3Ivc3JjL2xpYi9wYXJzZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQVUsU0FBUyxFQUEyQixNQUFNLG1CQUFtQixDQUFDO0FBRTlGLE9BQU8sYUFBYSxNQUFNLFVBQVUsQ0FBQztBQUNyQyxPQUFPLEVBQVEsTUFBTSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFbEQsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHO0lBQ3RCLElBQUksRUFBRSxLQUFLO0lBQ1gsT0FBTyxFQUFFO1FBQ1A7WUFDRSxJQUFJLEVBQUUsV0FBVztTQUNsQjtLQUNGO0NBQ0YsQ0FBQztBQUVGLG9FQUFvRTtBQUNwRSxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsQ0FBQyxJQUF5QixFQUFFLFdBQW9CLEVBQVUsRUFBRTtJQUNoRixNQUFNLE1BQU0sR0FBRyxXQUFXLElBQUksYUFBYSxDQUFDO0lBRTVDLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUMsTUFBTSxJQUFJLEdBQUcsYUFBYSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFckYsTUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQyxHQUFHLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RCLE9BQU8sR0FBRyxDQUFDLFNBQVMsQ0FBQztBQUN2QixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxJQUFVLEVBQUUsV0FBb0IsRUFBdUIsRUFBRTtJQUM3RSxNQUFNLE1BQU0sR0FBRyxXQUFXLElBQUksYUFBYSxDQUFDO0lBRTVDLE1BQU0sRUFBRSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDekMsRUFBRSxDQUFDLFNBQVMsR0FBRyxJQUFXLENBQUM7SUFFM0IsT0FBTyxTQUFTLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUN6RCxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxLQUF3QyxFQUFFLE1BQWMsRUFBbUIsRUFBRTtJQUN4RyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDWCxPQUFPLE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVELElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztRQUNuQixPQUFPLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELE1BQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxLQUFhLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDN0MsT0FBTyxNQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3RDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERPTVNlcmlhbGl6ZXIsIFNjaGVtYSwgRE9NUGFyc2VyLCBOb2RlIGFzIFByb3NlTWlycm9yTm9kZSB9IGZyb20gJ3Byb3NlbWlycm9yLW1vZGVsJztcblxuaW1wb3J0IGRlZmF1bHRTY2hlbWEgZnJvbSAnLi9zY2hlbWEnO1xuaW1wb3J0IHsgSFRNTCwgaXNIdG1sIH0gZnJvbSAnLi90cnVzdGVkVHlwZXNVdGlsJztcblxuZXhwb3J0IGNvbnN0IGVtcHR5RG9jID0ge1xuICB0eXBlOiAnZG9jJyxcbiAgY29udGVudDogW1xuICAgIHtcbiAgICAgIHR5cGU6ICdwYXJhZ3JhcGgnLFxuICAgIH0sXG4gIF0sXG59O1xuXG4vLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRG9jdW1lbnRGcmFnbWVudFxuZXhwb3J0IGNvbnN0IHRvSFRNTCA9IChqc29uOiBSZWNvcmQ8c3RyaW5nLCBhbnk+LCBpbnB1dFNjaGVtYT86IFNjaGVtYSk6IHN0cmluZyA9PiB7XG4gIGNvbnN0IHNjaGVtYSA9IGlucHV0U2NoZW1hID8/IGRlZmF1bHRTY2hlbWE7XG5cbiAgY29uc3QgY29udGVudE5vZGUgPSBzY2hlbWEubm9kZUZyb21KU09OKGpzb24pO1xuICBjb25zdCBodG1sID0gRE9NU2VyaWFsaXplci5mcm9tU2NoZW1hKHNjaGVtYSkuc2VyaWFsaXplRnJhZ21lbnQoY29udGVudE5vZGUuY29udGVudCk7XG5cbiAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRpdi5hcHBlbmRDaGlsZChodG1sKTtcbiAgcmV0dXJuIGRpdi5pbm5lckhUTUw7XG59O1xuXG5leHBvcnQgY29uc3QgdG9Eb2MgPSAoaHRtbDogSFRNTCwgaW5wdXRTY2hlbWE/OiBTY2hlbWEpOiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0+IHtcbiAgY29uc3Qgc2NoZW1hID0gaW5wdXRTY2hlbWEgPz8gZGVmYXVsdFNjaGVtYTtcblxuICBjb25zdCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBlbC5pbm5lckhUTUwgPSBodG1sIGFzIGFueTtcblxuICByZXR1cm4gRE9NUGFyc2VyLmZyb21TY2hlbWEoc2NoZW1hKS5wYXJzZShlbCkudG9KU09OKCk7XG59O1xuXG5leHBvcnQgY29uc3QgcGFyc2VDb250ZW50ID0gKHZhbHVlOiBIVE1MIHwgUmVjb3JkPHN0cmluZywgYW55PiB8IG51bGwsIHNjaGVtYTogU2NoZW1hKTogUHJvc2VNaXJyb3JOb2RlID0+IHtcbiAgaWYgKCF2YWx1ZSkge1xuICAgIHJldHVybiBzY2hlbWEubm9kZUZyb21KU09OKGVtcHR5RG9jKTtcbiAgfVxuXG4gIGlmICghaXNIdG1sKHZhbHVlKSkge1xuICAgIHJldHVybiBzY2hlbWEubm9kZUZyb21KU09OKHZhbHVlKTtcbiAgfVxuXG4gIGNvbnN0IGRvY0pzb24gPSB0b0RvYyh2YWx1ZSBhcyBIVE1MLCBzY2hlbWEpO1xuICByZXR1cm4gc2NoZW1hLm5vZGVGcm9tSlNPTihkb2NKc29uKTtcbn07XG4iXX0=