export const removeLink = () => {
    return (state, dispatch) => {
        const { doc, selection, tr } = state;
        const { $head: { pos }, from, to } = selection;
        // if the cursor is on the link without any selection
        if (from === to) {
            const $pos = doc.resolve(pos);
            const linkStart = pos - $pos.textOffset;
            const linkEnd = linkStart + $pos.parent.child($pos.index()).nodeSize;
            tr.removeMark(linkStart, linkEnd);
        }
        else {
            tr.removeMark(from, to);
        }
        if (!tr.docChanged) {
            return false;
        }
        dispatch?.(tr);
        return true;
    };
};
export default removeLink;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3ZlTGluay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1lZGl0b3IvY29tbWFuZHMvcmVtb3ZlTGluay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsR0FBWSxFQUFFO0lBQ3RDLE9BQU8sQ0FBQyxLQUFrQixFQUFFLFFBQW9DLEVBQVcsRUFBRTtRQUMzRSxNQUFNLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsR0FBRyxLQUFLLENBQUM7UUFDckMsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsR0FBRyxTQUFTLENBQUM7UUFFL0MscURBQXFEO1FBQ3JELElBQUksSUFBSSxLQUFLLEVBQUUsRUFBRSxDQUFDO1lBQ2hCLE1BQU0sSUFBSSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsTUFBTSxTQUFTLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7WUFDeEMsTUFBTSxPQUFPLEdBQUcsU0FBUyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQztZQUVyRSxFQUFFLENBQUMsVUFBVSxDQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNwQyxDQUFDO2FBQU0sQ0FBQztZQUNOLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzFCLENBQUM7UUFFRCxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ25CLE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQztRQUVELFFBQVEsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2YsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixlQUFlLFVBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVkaXRvclN0YXRlLCBUcmFuc2FjdGlvbiwgdHlwZSBDb21tYW5kIH0gZnJvbSAncHJvc2VtaXJyb3Itc3RhdGUnO1xuXG5leHBvcnQgY29uc3QgcmVtb3ZlTGluayA9ICgpOiBDb21tYW5kID0+IHtcbiAgcmV0dXJuIChzdGF0ZTogRWRpdG9yU3RhdGUsIGRpc3BhdGNoPzogKHRyOiBUcmFuc2FjdGlvbikgPT4gdm9pZCk6IGJvb2xlYW4gPT4ge1xuICAgIGNvbnN0IHsgZG9jLCBzZWxlY3Rpb24sIHRyIH0gPSBzdGF0ZTtcbiAgICBjb25zdCB7ICRoZWFkOiB7IHBvcyB9LCBmcm9tLCB0byB9ID0gc2VsZWN0aW9uO1xuXG4gICAgLy8gaWYgdGhlIGN1cnNvciBpcyBvbiB0aGUgbGluayB3aXRob3V0IGFueSBzZWxlY3Rpb25cbiAgICBpZiAoZnJvbSA9PT0gdG8pIHtcbiAgICAgIGNvbnN0ICRwb3MgPSBkb2MucmVzb2x2ZShwb3MpO1xuICAgICAgY29uc3QgbGlua1N0YXJ0ID0gcG9zIC0gJHBvcy50ZXh0T2Zmc2V0O1xuICAgICAgY29uc3QgbGlua0VuZCA9IGxpbmtTdGFydCArICRwb3MucGFyZW50LmNoaWxkKCRwb3MuaW5kZXgoKSkubm9kZVNpemU7XG5cbiAgICAgIHRyLnJlbW92ZU1hcmsobGlua1N0YXJ0LCBsaW5rRW5kKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdHIucmVtb3ZlTWFyayhmcm9tLCB0byk7XG4gICAgfVxuXG4gICAgaWYgKCF0ci5kb2NDaGFuZ2VkKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgZGlzcGF0Y2g/Lih0cik7XG4gICAgcmV0dXJuIHRydWU7XG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCByZW1vdmVMaW5rO1xuIl19