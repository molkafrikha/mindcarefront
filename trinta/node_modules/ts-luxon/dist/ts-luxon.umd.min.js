!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).tsLuxon={})}(this,(function(e){"use strict";class t extends Error{}class r extends t{constructor(e){super("Invalid DateTime: "+e.toMessage())}}class s extends t{constructor(e){super("Invalid Duration: "+e.toMessage())}}class n extends t{constructor(e){super("Invalid Interval: "+e.toMessage())}}class i extends t{constructor(e){super("Invalid unit "+e),Object.setPrototypeOf(this,i.prototype)}}class a extends t{constructor(e){super(e+" is an invalid or unknown zone specifier"),Object.setPrototypeOf(this,a.prototype)}}class o extends t{constructor(e){super(e),Object.setPrototypeOf(this,o.prototype)}}class u extends t{constructor(e){super(e),Object.setPrototypeOf(this,u.prototype)}}class l extends t{constructor(){super("Zone is an abstract class"),Object.setPrototypeOf(this,l.prototype)}}function c(...e){e.length}class h{get type(){throw new l}get ianaName(){return this.name}get name(){throw new l}get isUniversal(){throw new l}offsetName(e,t){throw c(e,t),new l}formatOffset(e,t){throw c(e,t),new l}offset(e){throw c(e),new l}equals(e){throw c(e),new l}get isValid(){throw new l}}var d=Intl;let m={};const f={year:0,month:1,day:2,era:3,hour:4,minute:5,second:6};let y={};class g extends h{static create(e){return y[e]||(y[e]=new g(e)),y[e]}static resetCache(){y={},m={}}static isValidSpecifier(e){return this.isValidZone(e)}static isValidZone(e){if(!e)return!1;try{return new d.DateTimeFormat("en-US",{timeZone:e}).format(),!0}catch(e){return!1}}constructor(e){super(),this._zoneName=e,this._valid=g.isValidZone(e)}get type(){return"iana"}get name(){return this._zoneName}get isUniversal(){return!1}offsetName(e,{format:t,locale:r}={}){return at(e,t,r,this.name)}formatOffset(e,t){return ct(this.offset(e),t)}offset(e){if(e=new Date(e),isNaN(+e))return NaN;var t=function(e){if(!m[e])try{m[e]=new d.DateTimeFormat("en-US",{hour12:!1,timeZone:e,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",era:"short"})}catch(t){throw new a(e)}return m[e]}(this.name);let r;var[t,s,n,i,o,u,l]=(typeof t.formatToParts==typeof isNaN?function(e,t){var r=e.formatToParts(t),s=[];for(let e=0;e<r.length;e++){var{type:n,value:i}=r[e],a=f[n];"era"===n?s[a]=i:Ae(a)||(s[a]=parseInt(i,10))}return s}:function(e,t){e=e.format(t).replace(/\u200E/g,"");var[,t,e,r,s,n,i,a]=/(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(e);return[r,t,e,s,n,i,a]})(t,e),o=24===o?0:o,c=(e=+e)%1e3;return(rt({year:(r="BC"===i?1-Math.abs(+t):r)||+t,month:+s,day:+n,hour:+o,minute:+u,second:+l,millisecond:0})-(e-=0<=c?c:1e3+c))/6e4}equals(e){return"iana"===e.type&&e.name===this.name}get isValid(){return this._valid}}const _={year:L="numeric",month:L,day:L};var v={year:L,month:F="short",day:L},p={year:L,month:F,day:L,weekday:F},w={year:L,month:St="long",day:L},O={year:L,month:St,day:L,weekday:St},k={hour:L,minute:L},b={hour:L,minute:L,second:L},S={hour:L,minute:L,second:L,timeZoneName:F},T={hour:L,minute:L,second:L,timeZoneName:St},N={hour:L,minute:L,hourCycle:"h23"},D={hour:L,minute:L,second:L,hourCycle:"h23"},M={hour:L,minute:L,second:L,hourCycle:"h23",timeZoneName:F},I={hour:L,minute:L,second:L,hourCycle:"h23",timeZoneName:St},E={year:L,month:L,day:L,hour:L,minute:L},j={year:L,month:L,day:L,hour:L,minute:L,second:L},x={year:L,month:F,day:L,hour:L,minute:L},V={year:L,month:F,day:L,hour:L,minute:L,second:L},W={year:L,month:F,day:L,weekday:F,hour:L,minute:L},C={year:L,month:St,day:L,hour:L,minute:L,timeZoneName:F},F={year:L,month:St,day:L,hour:L,minute:L,second:L,timeZoneName:F},Z={year:L,month:St,day:L,weekday:St,hour:L,minute:L,timeZoneName:St},L={year:L,month:St,day:L,weekday:St,hour:L,minute:L,second:L,timeZoneName:St};const z=["January","February","March","April","May","June","July","August","September","October","November","December"],A=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],q=["J","F","M","A","M","J","J","A","S","O","N","D"];function U(e){switch(e){case"narrow":return[...q];case"short":return[...A];case"long":return[...z];case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"]}}const $=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],R=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],Y=["M","T","W","T","F","S","S"];function P(e){switch(e){case"narrow":return[...Y];case"short":return[...R];case"long":return[...$];case"numeric":return["1","2","3","4","5","6","7"]}}const H=["AM","PM"],J=["Before Christ","Anno Domini"],G=["BC","AD"],B=["B","A"];function Q(e){switch(e){case"narrow":return[...B];case"short":return[...G];case"long":return[...J]}}let K={},X={};function ee(e,t={}){var r=JSON.stringify([e,t]);let s=X[r];return s||(s=new d.DateTimeFormat(e,t),X[r]=s),s}let te,re={},se={};function ne(e,t,r,s){return("en"===e.listingMode()?r:s)(t)}class ie{constructor(e,t,r){var{padTo:s,floor:n}=r,i=function(e,t){var r={};for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var s=0,n=Object.getOwnPropertySymbols(e);s<n.length;s++)t.indexOf(n[s])<0&&Object.prototype.propertyIsEnumerable.call(e,n[s])&&(r[n[s]]=e[n[s]]);return r}(r,["padTo","floor"]);this._padTo=s||0,this._floor=n||!1,(!t||0<Object.keys(i).length)&&(n=Object.assign({useGrouping:!1},r),0<this._padTo&&(n.minimumIntegerDigits=s),this._inf=function(e,t){var r=JSON.stringify([e,t]);let s=re[r];return s||(s=new d.NumberFormat(e,t),re[r]=s),s}(e,n))}format(e){var t;return this._inf?(t=this._floor?Math.floor(e):e,this._inf.format(t)):Je(this._floor?Math.floor(e):Ke(e,3),this._padTo)}}class ae{get dtf(){return this._dtf}constructor(e,t,r){let s;this._opts=r,this._opts.timeZone?this._dt=e:"fixed"===e.zone.type?(r=0<=(r=e.offset/60*-1)?"Etc/GMT+"+r:"Etc/GMT"+r,0!==e.offset&&g.create(r).isValid?(s=r,this._dt=e):(s="UTC",this._dt=0===e.offset?e:e.setZone("UTC").plus({minutes:e.offset}),this._originalZone=e.zone)):"system"===e.zone.type?this._dt=e:"iana"===e.zone.type?(this._dt=e,s=e.zone.name):(s="UTC",this._dt=e.setZone("UTC").plus({minutes:e.offset}),this._originalZone=e.zone),r=Object.assign(Object.assign({},this._opts),{timeZone:this._opts.timeZone||s}),this._dtf=ee(t,r)}format(){return this._originalZone?this.formatToParts().map((({value:e})=>e)).join(""):this.dtf.format(this._dt.toJSDate())}formatToParts(){var e=this.dtf.formatToParts(this._dt.toJSDate());return this._originalZone?e.map((e=>{var t;return"timeZoneName"===e.type?(t=this._originalZone.offsetName(this._dt.ts,{locale:this._dt.locale,format:this._opts.timeZoneName}),Object.assign(Object.assign({},e),{value:t})):e})):e}resolvedOptions(){return this._dtf.resolvedOptions()}}class oe{constructor(e,t,r){this._opts=Object.assign({style:"long"},r),!t&&$e()&&(this._rtf=function(e,t={}){var r=JSON.stringify([e,t]);let s=se[r];return s||(s=new d.RelativeTimeFormat(e,t),se[r]=s),s}(e,r))}format(e,t){if(this._rtf)return this._rtf.format(e,t);var[t,e,r="always",s]=[t,e,this._opts.numeric,"long"!==this._opts.style],n={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."],milliseconds:[]}[t=or.normalizeUnit(t)],i=-1===["hours","minutes","seconds"].indexOf(t);if("auto"===r&&i){var a="days"===t;switch(e){case 1:return a?"tomorrow":"next "+n[0];case-1:return a?"yesterday":"last "+n[0];case 0:return a?"today":"this "+n[0]}}return r=Object.is(e,-0)||e<0,e=1===(i=Math.abs(e)),s=s?!e&&n[2]||n[1]:e?n[0]:t,r?i+` ${s} ago`:`in ${i} `+s}formatToParts(e,t){return this._rtf?this._rtf.formatToParts(e,t):[]}}class ue{get fastNumbers(){return void 0===this._fastNumbersCached&&(this._fastNumbersCached=this._supportsFastNumbers()),this._fastNumbersCached}constructor(e,t,r,s,n){var[e,i,a]=function(e){if(-1===(t=(e=-1!==(t=e.indexOf("-x-"))?e.substring(0,t):e).indexOf("-u-")))return[e];{let r,s;try{r=ee(e).resolvedOptions(),s=e}catch(n){r=ee(e=e.substring(0,t)).resolvedOptions(),s=e}var{numberingSystem:t,calendar:e}=r;return[s,t,e]}}(e);this.locale=e,this.numberingSystem=t||i,this.outputCalendar=r||a,this._intl=(e=this.locale,t=this.numberingSystem,((i=this.outputCalendar)||t)&&(e.includes("-u-")||(e+="-u"),i&&(e+="-ca-"+i),t)&&(e+="-nu-"+t),e),this._weekSettings=s,this._weekdaysCache={format:{},standalone:{}},this._monthsCache={format:{},standalone:{}},this._meridiemCache=void 0,this._eraCache={},this._specifiedLocale=n,this._fastNumbersCached=void 0}static create(e,t,r,s,n=!1){return n=(e=e||be.defaultLocale)||(n?"en-US":te=te||(new d.DateTimeFormat).resolvedOptions().locale),t=t||be.defaultNumberingSystem,r=r||be.defaultOutputCalendar,s=Pe(s)||be.defaultWeekSettings,new ue(n,t,r,s,e)}static fromObject({locale:e,numberingSystem:t,outputCalendar:r,weekSettings:s}={}){return ue.create(e,t,r,s)}static fromOpts(e){return ue.create(e.locale,e.numberingSystem,e.outputCalendar,e.weekSettings,e.defaultToEN)}static resetCache(){te=void 0,K={},X={},re={},se={}}clone(e){return e&&0!==Object.getOwnPropertyNames(e).length?ue.create(e.locale||this._specifiedLocale,e.numberingSystem||this.numberingSystem,e.outputCalendar||this.outputCalendar,Pe(e.weekSettings)||this._weekSettings,e.defaultToEN||!1):this}dtFormatter(e,t={}){return new ae(e,this._intl,t)}equals(e){return this.locale===e.locale&&this.numberingSystem===e.numberingSystem&&this.outputCalendar===e.outputCalendar}eras(e){return ne(this,e,Q,(e=>{const t={era:e};return this._eraCache[e]||(this._eraCache[e]=[Yr.utc(-40,1,1),Yr.utc(2017,1,1)].map((e=>this.extract(e,t,"era")))),this._eraCache[e]}))}extract(e,t,r){if(e=this.dtFormatter(e,t).formatToParts().find((e=>e.type.toLowerCase()===r.toLowerCase())))return e.value;throw new Error("Invalid extract field "+r)}getMinDaysInFirstWeek(){return this.getWeekSettings().minimalDays}getStartOfWeek(){return this.getWeekSettings().firstDay}getWeekSettings(){return this._weekSettings||(Re()?this._getCachedWeekInfo(this.locale):gt)}getWeekendDays(){return this.getWeekSettings().weekend}isEnglish(){return!!~["en","en-us"].indexOf(this.locale.toLowerCase())||new d.DateTimeFormat(this._intl).resolvedOptions().locale.startsWith("en-us")}listFormatter(e={}){{var[e,t={}]=[this._intl,e],r=JSON.stringify([e,t]);let s=K[r];return s||(s=new d.ListFormat(e,t),K[r]=s),s}}listingMode(){var e=this.isEnglish(),t=!(null!==this.numberingSystem&&"latn"!==this.numberingSystem||null!==this.outputCalendar&&"gregory"!==this.outputCalendar);return e&&t?"en":"intl"}meridiems(){return ne(this,"long",(()=>H),(()=>(void 0===this._meridiemCache&&(this._meridiemCache=[Yr.utc(2016,11,13,9),Yr.utc(2016,11,13,19)].map((e=>this.extract(e,{hour:"numeric",hourCycle:"h12"},"dayPeriod")))),this._meridiemCache)))}months(e,t=!1){return ne(this,e,U,(e=>{const r=t?{month:e,day:"numeric"}:{month:e};var s=t?"format":"standalone";return this._monthsCache[s][e]||(this._monthsCache[s][e]=function(e){var t=[];for(let s=1;s<=12;s++){var r=Yr.utc(2009,s,1);t.push(e(r))}return t}((e=>this.extract(e,r,"month")))),this._monthsCache[s][e]}))}numberFormatter(e={}){return new ie(this._intl,this.fastNumbers,e)}redefaultToEN(e={}){return this.clone(Object.assign(Object.assign({},e),{defaultToEN:!0}))}redefaultToSystem(e={}){return this.clone(Object.assign(Object.assign({},e),{defaultToEN:!1}))}relFormatter(e={}){return new oe(this._intl,this.isEnglish(),e)}weekdays(e,t=!1){return ne(this,e,P,(e=>{const r=t?{weekday:e,year:"numeric",month:"long",day:"numeric"}:{weekday:e};var s=t?"format":"standalone";return this._weekdaysCache[s][e]||(this._weekdaysCache[s][e]=function(e){var t=[];for(let s=1;s<=7;s++){var r=Yr.utc(2016,11,13+s);t.push(e(r))}return t}((e=>this.extract(e,r,"weekday")))),this._weekdaysCache[s][e]}))}_getCachedWeekInfo(e){let t=ue._weekInfoCache[e];var r;return t||(t="getWeekInfo"in(r=new d.Locale(e))?r.getWeekInfo():r.weekInfo,ue._weekInfoCache[e]=t),t}_supportsFastNumbers(){return(!this.numberingSystem||"latn"===this.numberingSystem)&&("latn"===this.numberingSystem||!this.locale||this.locale.startsWith("en")||"latn"===d.DateTimeFormat(this._intl).resolvedOptions().numberingSystem)}}ue._weekInfoCache={};let le=null;class ce extends h{static get utcInstance(){return le=null===le?new ce(0):le}get isValid(){return!0}get ianaName(){return 0===this._fixed?"Etc/UTC":"Etc/GMT"+ct(-this._fixed,"narrow")}get name(){return 0===this._fixed?"UTC":"UTC"+ct(this._fixed,"narrow")}get type(){return"fixed"}get isUniversal(){return!0}constructor(e){super(),this._fixed=e}static instance(e){return 0===e?ce.utcInstance:new ce(e)}static parseSpecifier(e){return e&&(e=e.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i))?new ce(ot(e[1],e[2])):null}offsetName(){return this.name}formatOffset(e,t){return ct(this._fixed,t)}offset(){return this._fixed}equals(e){return"fixed"===e.type&&e._fixed===this._fixed}}class he extends h{constructor(e){super(),this._zoneName=e,Object.setPrototypeOf(this,he.prototype)}get type(){return"invalid"}get name(){return this._zoneName}get isUniversal(){return!1}offsetName(){return null}formatOffset(){return""}offset(){return NaN}equals(){return!1}get isValid(){return!1}}let de=null;class me extends h{static get instance(){return de=null===de?new me:de}get type(){return"system"}get name(){return(new Intl.DateTimeFormat).resolvedOptions().timeZone}get isUniversal(){return!1}offsetName(e,{format:t,locale:r}){return at(e,t,r)}formatOffset(e,t){return ct(this.offset(e),t)}offset(e){return-new Date(e).getTimezoneOffset()}equals(e){return"system"===e.type}get isValid(){return!0}}const fe=(e,t)=>{var r;return Ae(e)||null===e?t:e instanceof h?e:"string"==typeof e?"default"===(r=e.toLowerCase())?t:"local"===r||"system"===r?me.instance:"utc"===r||"gmt"===r?ce.utcInstance:ce.parseSpecifier(r)||g.create(e):qe(e)?ce.instance(e):"object"==typeof e&&"offset"in e&&"function"==typeof e.offset?e:new he(e)};let ye,ge,_e,ve,pe=()=>Date.now(),we="system",Oe=60,ke=!1;class be{static set defaultLocale(e){ye=e}static get defaultLocale(){return ye}static set defaultNumberingSystem(e){ge=e}static get defaultNumberingSystem(){return ge}static set defaultOutputCalendar(e){_e=e}static get defaultOutputCalendar(){return _e}static set defaultWeekSettings(e){ve=Pe(e)}static get defaultWeekSettings(){return ve}static set defaultZone(e){we=e}static get defaultZone(){return fe(we,me.instance)}static set defaultZoneLike(e){we=e}static set now(e){pe=e}static get now(){return pe}static set throwOnInvalid(e){ke=e}static get throwOnInvalid(){return ke}static set twoDigitCutoffYear(e){Oe=e%100}static get twoDigitCutoffYear(){return Oe}static resetCaches(){ue.resetCache(),g.resetCache()}}class Se{constructor(e,t){this.reason=e,this.explanation=t,this._formattedExplanation="",t&&(this._formattedExplanation=": "+t)}toMessage(){return""+this.reason+this._formattedExplanation}}const Te=[0,31,59,90,120,151,181,212,243,273,304,334],Ne=[0,31,60,91,121,152,182,213,244,274,305,335];function De(e,t){return new Se("unit out of range",`you specified ${t} (of type ${typeof t}) as a ${e}, which is invalid`)}function Me(e,t,r){return r+(Xe(e)?Ne:Te)[t-1]}function Ie(e,t){var r=(e=Xe(e)?Ne:Te).findIndex((e=>e<t));return{month:r+1,day:t-e[r]}}function Ee(e,t,r){return t=new Date(Date.UTC(e,t-1,r)),e<100&&0<=e&&t.setUTCFullYear(t.getUTCFullYear()-1900),0===(r=t.getUTCDay())?7:r}function je(e,t=gt.minimalDays,r=gt.firstDay){var{year:s,month:n,day:i}=e,a=Me(s,n,i),n=Ze(Ee(s,n,i),r);let o,u=Math.floor((a-n+14-t)/7);return u<1?(o=s-1,u=nt(o,t,r)):u>nt(s,t,r)?(o=s+1,u=1):o=s,Object.assign({weekYear:o,weekNumber:u,weekday:n},ht(e))}function xe(e,t=gt.minimalDays,r=gt.firstDay){var{weekYear:s,weekNumber:n,weekday:i}=e,a=(r=Ze(Ee(s,1,t),r),et(s));let o,u=7*n+i-r-7+t;u<1?(o=s-1,u+=et(o)):u>a?(o=s+1,u-=et(s)):o=s;var{month:n,day:i}=Ie(o,u);return Object.assign({year:o,month:n,day:i},ht(e))}function Ve(e){var{year:t,month:r,day:s}=e,r=Me(t,r,s);return Object.assign({year:t,ordinal:r},ht(e))}function We(e){var{year:t,ordinal:r}=e,{month:r,day:s}=Ie(t,r);return Object.assign({year:t,month:r,day:s},ht(e))}function Ce(e){var t=Ue(e.year),r=He(e.month,1,12),s=He(e.day,1,tt(e.year,e.month));return t?r?!s&&De("day",e.day):De("month",e.month):De("year",e.year)}function Fe(e){var{hour:e,minute:t,second:r,millisecond:s}=e,n=He(e,0,23)||24===e&&0===t&&0===r&&0===s,i=He(t,0,59),a=He(r,0,59),o=He(s,0,999);return n?i?a?!o&&De("millisecond",s):De("second",r):De("minute",t):De("hour",e)}function Ze(e,t){return(e-t+7)%7+1}function Le(e,t){if(ze(e.localWeekday)||ze(e.localWeekNumber)||ze(e.localWeekYear)){if(ze(e.weekday)||ze(e.weekNumber)||ze(e.weekYear))throw new o("Cannot mix locale-based week fields with ISO-based week fields");return ze(e.localWeekday)&&(e.weekday=e.localWeekday),ze(e.localWeekNumber)&&(e.weekNumber=e.localWeekNumber),ze(e.localWeekYear)&&(e.weekYear=e.localWeekYear),delete e.localWeekday,delete e.localWeekNumber,delete e.localWeekYear,{minDaysInFirstWeek:t.getMinDaysInFirstWeek(),startOfWeek:t.getStartOfWeek()}}return{minDaysInFirstWeek:gt.minimalDays,startOfWeek:gt.firstDay}}function ze(e){return void 0!==e}function Ae(e){return void 0===e}function qe(e){return"number"==typeof e}function Ue(e){return qe(e)&&e%1==0}function $e(){try{return void 0!==d&&!!d.RelativeTimeFormat}catch(e){return!1}}function Re(){try{return void 0!==d&&!!d.Locale&&("weekInfo"in d.Locale.prototype||"getWeekInfo"in d.Locale.prototype)}catch(e){return!1}}function Ye(e,t,r){if(0!==e.length)return e.reduce(((e,s)=>(s=[t(s),s],r(e[0],s[0])===e[0]?e:s)),[t(e[0]),e[0]])[1]}function Pe(e){if(e){if("object"!=typeof e)throw new u("Week settings must be an object");if(He(e.firstDay,1,7)&&He(e.minimalDays,1,7)&&Array.isArray(e.weekend)&&!e.weekend.some((e=>!He(e,1,7))))return{firstDay:e.firstDay,minimalDays:e.minimalDays,weekend:e.weekend};throw new u("Invalid week settings")}}function He(e,t,r){return Ue(e)&&t<=e&&e<=r}function Je(e,t=2){var r=+e<0?"-":"";return r+((e=r?-1*+e:e).toString().length<t?("0".repeat(t)+e).slice(-t):e.toString())}function Ge(e){if(e)return parseInt(e,10)}function Be(e){if(e)return parseFloat(e)}function Qe(e){if(!Ae(e)&&null!==e&&""!==e)return e=1e3*parseFloat("0."+e),Math.floor(e)}function Ke(e,t,r=!1){return t=Math.pow(10,t),(r?Math.trunc:Math.round)(e*t)/t}function Xe(e){return e%4==0&&(e%100!=0||e%400==0)}function et(e){return Xe(e)?366:365}function tt(e,t){var r=(r=t-1)-12*Math.floor(r/12)+1;return[31,Xe(e+(t-r)/12)?29:28,31,30,31,30,31,31,30,31,30,31][r-1]}function rt(e){let t=Date.UTC(e.year,e.month-1,e.day,e.hour,e.minute,e.second,e.millisecond);return e.year<100&&0<=e.year&&(t=new Date(t)).setUTCFullYear(e.year,e.month-1,e.day),+t}function st(e,t,r){return-Ze(Ee(e,1,t),r)+t-1}function nt(e,t=4,r=1){var s=st(e,t,r);t=st(e+1,t,r);return(et(e)-s+t)/7}function it(e){return 99<e?e:e>be.twoDigitCutoffYear?1900+e:2e3+e}function at(e,t,r,s){return e=new Date(e),t=Object.assign({timeZoneName:t},{hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",timeZone:s}),s=new d.DateTimeFormat(r,t).formatToParts(e).find((e=>"timezonename"===e.type.toLowerCase())),s?s.value:null}function ot(e,t){let r=parseInt(e,10);return Number.isNaN(r)&&(r=0),e=parseInt(t,10)||0,60*r+(t=r<0||Object.is(r,-0)?-e:e)}function ut(e){var t=Number(e);if("boolean"==typeof e||""===e||Number.isNaN(t))throw new u("Invalid unit value "+e);return t}function lt(e,t){return Object.keys(e).reduce(((r,s)=>(void 0!==e[s]&&null!==e[s]&&(r[t(s)]=ut(e[s])),r)),{})}function ct(e,t){var r=Math.trunc(Math.abs(e/60)),s=Math.trunc(Math.abs(e%60)),n=0<=e?"+":"-";switch(t){case"short":return n+Je(r,2)+":"+Je(s,2);case"narrow":return n+r+(0<s?":"+s:"");case"techie":return n+Je(r,2)+Je(s,2);default:throw new RangeError(`Value format ${t} is out of range for property format`)}}function ht(e){return t=e,["hour","minute","second","millisecond"].reduce(((e,r)=>(e[r]=t[r],e)),{});var t}const dt=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds"],mt=dt.slice(0).reverse(),ft=["years","months","days","hours","minutes","seconds","milliseconds"],yt={year:"year",years:"year",quarter:"quarter",quarters:"quarter",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",localweeknumber:"localWeekNumber",localweeknumbers:"localWeekNumber",localweekday:"localWeekday",localweekdays:"localWeekday",localweekyear:"localWeekYear",localweekyears:"localWeekYear",minute:"minute",minutes:"minute",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"},gt={firstDay:1,minimalDays:4,weekend:[6,7]};function _t(e,t){let r="";for(const s of e)s.literal?r+=s.val:r+=t(s.val);return r}const vt={D:_,DD:v,DDD:w,DDDD:O,t:k,tt:b,ttt:S,tttt:T,T:N,TT:D,TTT:M,TTTT:I,f:E,ff:x,fff:C,ffff:Z,F:j,FF:V,FFF:F,FFFF:L};class pt{constructor(e,t){this._opts=t,this._loc=e,this._systemLoc=void 0}static create(e,t={}){return new pt(e,t)}static macroTokenToFormatOpts(e){return vt[e]}static parseFormat(e){let t=null,r="",s=!1;var n=[];for(let a=0;a<e.length;a++){var i=e.charAt(a);"'"===i?(0<r.length&&n.push({literal:s||/^\s+$/.test(r),val:r}),t=null,r="",s=!s):s||i===t?r+=i:(0<r.length&&n.push({literal:/^\s+$/.test(r),val:r}),r=i,t=i)}return 0<r.length&&n.push({literal:s||/^\s+$/.test(r),val:r}),n}dtFormatter(e,t={}){return this._loc.dtFormatter(e,Object.assign(Object.assign({},this._opts),t))}formatDateTime(e,t){return this.dtFormatter(e,t).format()}formatDateTimeFromString(e,t){const r="en"===this._loc.listingMode(),s=this._loc.outputCalendar&&"gregory"!==this._loc.outputCalendar,n=(t,r)=>this._loc.extract(e,t,r),i=t=>e.isOffsetFixed&&0===e.offset&&t.allowZ?"Z":e.isValid?e.zone.formatOffset(e.ts,t.format):"",a=(t,s)=>{return r?(i=e,U(t)[i.month-1]):n(s?{month:t}:{month:t,day:"numeric"},"month");var i},o=(t,s)=>{return r?(i=e,P(t)[i.weekday-1]):n(s?{weekday:t}:{weekday:t,month:"long",day:"numeric"},"weekday");var i},u=t=>{var r=pt.macroTokenToFormatOpts(t);return r?this.formatWithSystemDefault(e,r):t},l=t=>{return r?(s=e,Q(t)[s.year<0?0:1]):n({era:t},"era");var s};return _t(pt.parseFormat(t),(t=>{switch(t){case"S":return this.num(e.millisecond);case"u":case"SSS":return this.num(e.millisecond,3);case"s":return this.num(e.second);case"ss":return this.num(e.second,2);case"uu":return this.num(Math.floor(e.millisecond/10),2);case"uuu":return this.num(Math.floor(e.millisecond/100));case"m":return this.num(e.minute);case"mm":return this.num(e.minute,2);case"h":return this.num(e.hour%12==0?12:e.hour%12);case"hh":return this.num(e.hour%12==0?12:e.hour%12,2);case"H":return this.num(e.hour);case"HH":return this.num(e.hour,2);case"Z":return i({format:"narrow",allowZ:this._opts.allowZ});case"ZZ":return i({format:"short",allowZ:this._opts.allowZ});case"ZZZ":return i({format:"techie",allowZ:this._opts.allowZ});case"ZZZZ":return e.zone.offsetName(e.ts,{format:"short",locale:this._loc.locale})||"";case"ZZZZZ":return e.zone.offsetName(e.ts,{format:"long",locale:this._loc.locale})||"";case"z":return e.zoneName||"";case"a":return r?H[e.hour<12?0:1]:n({hour:"numeric",hourCycle:"h12"},"dayPeriod");case"d":return s?n({day:"numeric"},"day"):this.num(e.day);case"dd":return s?n({day:"2-digit"},"day"):this.num(e.day,2);case"c":case"E":return this.num(e.weekday);case"ccc":return o("short",!0);case"cccc":return o("long",!0);case"ccccc":return o("narrow",!0);case"EEE":return o("short",!1);case"EEEE":return o("long",!1);case"EEEEE":return o("narrow",!1);case"L":return s?n({month:"numeric",day:"numeric"},"month"):this.num(e.month);case"LL":return s?n({month:"2-digit",day:"numeric"},"month"):this.num(e.month,2);case"LLL":return a("short",!0);case"LLLL":return a("long",!0);case"LLLLL":return a("narrow",!0);case"M":return s?n({month:"numeric"},"month"):this.num(e.month);case"MM":return s?n({month:"2-digit"},"month"):this.num(e.month,2);case"MMM":return a("short",!1);case"MMMM":return a("long",!1);case"MMMMM":return a("narrow",!1);case"y":return s?n({year:"numeric"},"year"):this.num(e.year);case"yy":return s?n({year:"2-digit"},"year"):this.num(parseInt(e.year.toString().slice(-2),10),2);case"yyyy":return s?n({year:"numeric"},"year"):this.num(e.year,4);case"yyyyyy":return s?n({year:"numeric"},"year"):this.num(e.year,6);case"G":return l("short");case"GG":return l("long");case"GGGGG":return l("narrow");case"kk":return this.num(parseInt(e.weekYear.toString().slice(-2),10),2);case"kkkk":return this.num(e.weekYear,4);case"W":return this.num(e.weekNumber);case"WW":return this.num(e.weekNumber,2);case"o":return this.num(e.ordinal);case"ooo":return this.num(e.ordinal,3);case"q":return this.num(e.quarter);case"qq":return this.num(e.quarter,2);case"X":return this.num(Math.floor(e.ts/1e3));case"x":return this.num(e.ts);default:return u(t)}}))}formatDateTimeParts(e,t){return this.dtFormatter(e,t).formatToParts()}formatDurationFromString(e,t){const r=e=>{switch(e[0]){case"S":return"milliseconds";case"s":return"seconds";case"m":return"minutes";case"h":return"hours";case"d":return"days";case"M":return"months";case"y":return"years";default:return}};var s,n=(t=pt.parseFormat(t)).reduce(((e,{literal:t,val:r})=>t?e:e.concat(r)),[]);e=e.shiftTo(...n.map(r).filter((e=>!!e)));return _t(t,(s=e,e=>{var t=r(e);return t?this.num(s.get(t),e.length):e}))}formatInterval(e,t={}){if(e.isValid)return this.dtFormatter(e.start,t).dtf.formatRange(e.start.toJSDate(),e.end.toJSDate());throw Error("Invalid Interval provided!")}formatWithSystemDefault(e,t){return void 0===this._systemLoc&&(this._systemLoc=this._loc.redefaultToSystem()),this._systemLoc.dtFormatter(e,Object.assign(Object.assign({},this._opts),t)).format()}num(e,t=0){var r;return this._opts.forceSimple?Je(e,t):(r=Object.assign({},this._opts),0<t&&(r.padTo=t),this._loc.numberFormatter(r).format(e))}resolvedOptions(e,t={}){return this.dtFormatter(e,t).resolvedOptions()}}function wt(...e){return e=e.reduce(((e,t)=>e+t.source),""),RegExp(`^${e}$`)}function Ot(...e){return t=>e.reduce((([e,r,s],n)=>{var[n,s,i]=n(t,s);return[Object.assign(Object.assign({},e),n),s||r,i]}),[{},null,1]).slice(0,2)}function kt(e,...t){if(null!=e)for(var[r,s]of t)if(r=r.exec(e))return s(r);return[null,null]}function bt(...e){return(t,r)=>{var s={};let n;for(n=0;n<e.length;n++)s[e[n]]=Ge(t[r+n]);return[s,null,r+n]}}var St=/[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/,Tt=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,Nt=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,Dt=RegExp(Nt.source+`(?:${Tt.source}?(?:\\[(${St.source})\\])?)?`),Mt=RegExp(`(?:T${Dt.source})?`),It=bt("weekYear","weekNumber","weekday"),Et=bt("year","ordinal");Tt=RegExp(Nt.source+` ?(?:${Tt.source}|(${St.source}))?`),St=RegExp(`(?: ${Tt.source})?`);function jt(e,t,r){return Ae(e[t])?r:Ge(e[t])}function xt(e,t){return[{hour:jt(e,t,0),minute:jt(e,t+1,0),second:jt(e,t+2,0),millisecond:Qe(e[t+3])},null,t+4]}function Vt(e,t){var r=!e[t]&&!e[t+1];e=ot(e[t+1],e[t+2]);return[{},r?null:ce.instance(e),t+3]}function Wt(e,t){return[{},e[t]?g.create(e[t]):null,t+1]}const Ct=RegExp(`^T?${Nt.source}$`),Ft=/^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;function Zt(e){var[e,t,r,s,n,i,a,o,u]=e;const l=e.startsWith("-");e=!!o&&o.startsWith("-");var c=(e,t=!1)=>"number"==typeof e&&(t||e&&l)?-e:e;return[{years:c(Be(t)),months:c(Be(r)),weeks:c(Be(s)),days:c(Be(n)),hours:c(Be(i)),minutes:c(Be(a)),seconds:c(Be(o),"-0"===o),milliseconds:c(Qe(u),e)}]}const Lt={GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function zt(e,t,r,s,n,i,a){let o;return e&&(o=3<e.length?$.indexOf(e)+1:R.indexOf(e)+1),{year:2===t.length?it(Ge(t)):Ge(t),month:A.indexOf(r)+1,day:Ge(s),hour:Ge(n),minute:Ge(i),second:Ge(a),weekday:o}}const At=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function qt(e){var[,e,t,r,s,n,i,a,o,u,l,c]=e;e=zt(e,s,r,t,n,i,a);let h;return h=o?Lt[o]:u?0:ot(l,c),[e,new ce(h)]}const Ut=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,$t=/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,Rt=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function Yt(e){var[,e,t,r,s,n,i,a]=e;return[zt(e,s,r,t,n,i,a),ce.utcInstance]}function Pt(e){var[,e,t,r,s,n,i,a]=e;return[zt(e,a,t,r,s,n,i),ce.utcInstance]}const Ht=wt(/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,Mt),Jt=wt(/(\d{4})-?W(\d\d)(?:-?(\d))?/,Mt),Gt=wt(/(\d{4})-?(\d{3})/,Mt),Bt=wt(Dt),Qt=Ot((function(e,t){return[{year:jt(e,t,0),month:jt(e,t+1,1),day:jt(e,t+2,1)},null,t+3]}),xt,Vt,Wt),Kt=Ot(It,xt,Vt,Wt),Xt=Ot(Et,xt,Vt,Wt),er=Ot(xt,Vt,Wt),tr=wt(/(\d{4})-(\d\d)-(\d\d)/,St),rr=wt(Tt),sr=Ot(xt,Vt,Wt);Nt={weeks:{days:7,hours:168,minutes:10080,seconds:604800,milliseconds:6048e5},days:{hours:24,minutes:1440,seconds:86400,milliseconds:864e5},hours:{minutes:60,seconds:3600,milliseconds:36e5},minutes:{seconds:60,milliseconds:6e4},seconds:{milliseconds:1e3}};const nr=Object.assign({years:{quarters:4,months:12,weeks:52,days:365,hours:8760,minutes:525600,seconds:31536e3,milliseconds:31536e6},quarters:{months:3,weeks:13,days:91,hours:2184,minutes:131040,seconds:7862400,milliseconds:78624e5},months:{weeks:4,days:30,hours:720,minutes:43200,seconds:2592e3,milliseconds:2592e6}},Nt);Mt=365.2425,Dt=30.436875;const ir=Object.assign({years:{quarters:4,months:12,weeks:Mt/7,days:Mt,hours:24*Mt,minutes:525949.2,seconds:525949.2*60,milliseconds:525949.2*60*1e3},quarters:{months:3,weeks:Mt/28,days:Mt/4,hours:24*Mt/4,minutes:131487.3,seconds:525949.2*60/4,milliseconds:7889237999.999999},months:{weeks:Dt/7,days:Dt,hours:24*Dt,minutes:43829.1,seconds:2629746,milliseconds:2629746e3}},Nt);function ar(e,t){var r;let s=null!=(r=t.milliseconds)?r:0;for(const r of mt.slice(1))t[r]&&(s+=t[r]*e[r].milliseconds);return s}class or{static get _INVALID(){return"Invalid Duration"}get conversionAccuracy(){return this._conversionAccuracy}get days(){return this.isValid?this._values.days||0:NaN}get hours(){return this.isValid?this._values.hours||0:NaN}get invalidExplanation(){return this._invalid?this._invalid.explanation:null}get invalidReason(){return this._invalid?this._invalid.reason:null}get isValid(){return null===this._invalid}get locale(){return this.isValid?this._loc.locale:void 0}get matrix(){return this._matrix}get milliseconds(){return this.isValid?this._values.milliseconds||0:NaN}get minutes(){return this.isValid?this._values.minutes||0:NaN}get months(){return this.isValid?this._values.months||0:NaN}get numberingSystem(){return this.isValid?this._loc.numberingSystem:void 0}get quarters(){return this.isValid?this._values.quarters||0:NaN}get seconds(){return this.isValid?this._values.seconds||0:NaN}get weeks(){return this.isValid?this._values.weeks||0:NaN}get years(){return this.isValid?this._values.years||0:NaN}constructor(e){let t,r;t="longterm"===e.conversionAccuracy||!1?(r="longterm",ir):(r="casual",nr),e.matrix&&(t=e.matrix),this._values=e.values||{},this._loc=e.loc||ue.create(),this._conversionAccuracy=r,this._invalid=e.invalid||null,this._matrix=t,this._isLuxonDuration=!0}static fromDurationLike(e){if(qe(e))return or.fromMillis(e);if(or.isDuration(e))return e;if("object"==typeof e)return or.fromObject(e);throw new u(`Unknown duration argument ${e} of type `+typeof e)}static fromISO(e,t){var[r]=kt(e,[Ft,Zt]);return r?or.fromObject(r,t):or.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static fromISOTime(e,t={}){var[r]=kt(e,[Ct,Ot(xt)]);return r?or.fromObject(r,t):or.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static fromMillis(e,t={}){return or.fromObject({milliseconds:e},t)}static fromObject(e,t={}){if(null==e||"object"!=typeof e)throw new u("Duration.fromObject: argument expected to be an object, got "+(null===e?"null":typeof e));return new or({values:lt(e,or.normalizeUnit),loc:ue.fromObject(t),conversionAccuracy:t.conversionAccuracy,matrix:t.matrix})}static invalid(e,t){if(!e)throw new u("need to specify a reason the Duration is invalid");if(e=e instanceof Se?e:new Se(e,t),be.throwOnInvalid)throw new s(e);return new or({invalid:e})}static isDuration(e){return!!e&&e._isLuxonDuration||!1}static normalizeUnit(e){var t={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",localWeekNumber:"localWeekNumbers",localWeekYear:"localWeekYears",localWeekday:"localWeekdays",localWeekNumbers:"localWeekNumbers",localWeekYears:"localWeekYears",localWeekdays:"localWeekdays",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds"}[e];if(t)return t;throw new i(e)}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Duration { values: ${JSON.stringify(this._values)} }`:`Duration { Invalid, reason: ${this.invalidReason} }`}as(e){return this.shiftTo(e).get(e)}equals(e){if(!this.isValid||!e.isValid)return!1;if(!this._loc.equals(e._loc))return!1;for(const s of dt)if(t=this._values[s],r=e._values[s],!(void 0===t||0===t?void 0===r||0===r:t===r))return!1;var t,r;return!0}get(e){return this[or.normalizeUnit(e)]}getMaxUnit(e=!1){e=e?ft:dt;const t=this.shiftTo(...e).toObject();return e.find((e=>0<(t[e]||0)))||mt[0]}mapUnits(e){if(!this.isValid)return this;const t={};return Object.keys(this._values).forEach((r=>{t[r]=ut(e(this._values[r],r))})),this._clone(this,{values:t},!0)}minus(e){return this.isValid?(e=or.fromDurationLike(e),this.plus(e.negate())):this}negate(){if(!this.isValid)return this;const e={};return Object.keys(this._values).forEach((t=>{e[t]=0===this._values[t]?0:-this._values[t]})),this._clone(this,{values:e},!0)}normalize(){if(!this.isValid)return this;var e=this.toObject();{var t=this._matrix,r=e;const s=ar(t,r)<0?-1:1;mt.reduce(((e,n)=>{var i,a;return Ae(r[n])?e:(e&&(a=r[e]*s,i=t[n][e],a=Math.floor(a/i),r[n]+=a*s,r[e]-=a*i*s),n)}),null),dt.reduce(((e,s)=>{var n;return Ae(r[s])?e:(e&&(n=r[e]%1,r[e]-=n,r[s]+=n*t[e][s]),s)}),null)}return this._clone(this,{values:e},!0)}plus(e){if(!this.isValid)return this;const t=or.fromDurationLike(e),r={};return dt.forEach((e=>{void 0===t._values[e]&&void 0===this._values[e]||(r[e]=t.get(e)+this.get(e))})),this._clone(this,{values:r},!0)}reconfigure({locale:e,numberingSystem:t,conversionAccuracy:r,matrix:s}={}){return e=this._loc.clone({locale:e,numberingSystem:t}),this._clone(this,{loc:e,matrix:s,conversionAccuracy:r})}rescale(){var e;return this.isValid?([e={}]=[this.normalize().shiftToAll().toObject()],e=Object.entries(e).reduce(((e,[t,r])=>(0!==r&&(e[t]=r),e)),{}),this._clone(this,{values:e},!0)):this}set(e){return this.isValid?(e=Object.assign(Object.assign({},this._values),lt(e,or.normalizeUnit)),this._clone(this,{values:e})):this}shiftTo(...e){if(!this.isValid||0===e.length)return this;e=e.map((e=>or.normalizeUnit(e)));const t={},r={},s=this.toObject();let n;return dt.forEach((i=>{if(0<=e.indexOf(i)){n=i;let e=0;Object.keys(r).forEach((t=>{e+=this._matrix[t][i]*r[t],r[t]=0})),qe(s[i])&&(e+=s[i]);var a=Math.trunc(e);t[i]=a,r[i]=(1e3*e-1e3*a)/1e3}else qe(s[i])&&(r[i]=s[i])})),Object.keys(r).forEach((e=>{var s=r[e];0!==s&&(t[n]+=e===n?s:s/this._matrix[n][e])})),this._clone(this,{values:t},!0).normalize()}shiftToAll(){return this.isValid?this.shiftTo("years","months","weeks","days","hours","minutes","seconds","milliseconds"):this}toFormat(e,t={floor:!0}){return t=Object.assign(Object.assign({},t),{floor:!1!==t.round&&!1!==t.floor}),this.isValid?pt.create(this._loc,t).formatDurationFromString(this,e):or._INVALID}toHuman(e={}){if(!this.isValid)return or._INVALID;var t=this.getMaxUnit(!0),r=e.onlyHumanUnits?ft:dt;const s=this.shiftTo(...r.slice(r.indexOf(t))).toObject();return t=r.map((t=>{var r=s[t];return Ae(r)||0===r?null:this._loc.numberFormatter(Object.assign(Object.assign({style:"unit",unitDisplay:"long"},e),{unit:t.slice(0,-1)})).format(r)})).filter((e=>e)),r=Object.assign({type:"conjunction",style:e.listStyle||"narrow"},e),this._loc.listFormatter(r).format(t)}toISO(){if(!this.isValid)return null;let e="P";return 0!==this.years&&(e+=this.years+"Y"),0===this.months&&0===this.quarters||(e+=this.months+3*this.quarters+"M"),0!==this.weeks&&(e+=this.weeks+"W"),0!==this.days&&(e+=this.days+"D"),0===this.hours&&0===this.minutes&&0===this.seconds&&0===this.milliseconds||(e+="T"),0!==this.hours&&(e+=this.hours+"H"),0!==this.minutes&&(e+=this.minutes+"M"),0===this.seconds&&0===this.milliseconds||(e+=Ke(this.seconds+this.milliseconds/1e3,3)+"S"),"P"===e&&(e+="T0S"),e}toISOTime(e={}){var t;return!this.isValid||(t=this.toMillis())<0||864e5<=t?null:(e=Object.assign(Object.assign({suppressMilliseconds:!1,suppressSeconds:!1,includePrefix:!1,format:"extended"},e),{includeOffset:!1}),Yr.fromMillis(t,{zone:"UTC"}).toISOTime(e))}toJSON(){return this.toISO()}toMillis(){return this.isValid?ar(this.matrix,this._values):NaN}toObject(){return this.isValid?Object.assign({},this._values):{}}toString(){return this.toISO()}valueOf(){return this.toMillis()}_clone(e,t,r=!1){return r={values:r?t.values:Object.assign(Object.assign({},e._values),t.values||{}),loc:e._loc.clone(t.loc),conversionAccuracy:t.conversionAccuracy||e.conversionAccuracy,matrix:t.matrix||e.matrix},new or(r)}}const ur="Invalid Interval";function lr(e){if(Yr.isDateTime(e))return e;if(e&&e.valueOf&&qe(e.valueOf()))return Yr.fromJSDate(e);if(e&&"object"==typeof e)return Yr.fromObject(e);throw new u(`Unknown datetime argument: ${e}, of type `+typeof e)}class cr{get end(){return this.isValid?this._e:null}get invalidReason(){return this._invalid?this._invalid.reason:null}get isValid(){return null===this.invalidReason}get start(){return this.isValid?this._s:null}constructor(e){this._s=e.start,this._e=e.end,this._invalid=e.invalid||null,this._isLuxonInterval=!0}static after(e,t){return t=or.fromDurationLike(t),e=lr(e),new cr({start:e,end:e?e.plus(t):void 0})}static before(e,t){return t=or.fromDurationLike(t),e=lr(e),new cr({start:e?e.minus(t):void 0,end:e})}static fromDateTimes(e,t){return function(e,t){return e&&e.isValid?t&&t.isValid?t<e?cr.invalid("end before start",`The end of an interval must be after its start, but you had start=${e.toISO()} and end=`+t.toISO()):void 0:cr.invalid("missing or invalid end"):cr.invalid("missing or invalid start")}(e=lr(e),t=lr(t))||new cr({start:e,end:t})}static fromISO(e,t={}){var[r,s]=(e||"").split("/",2);if(r&&s){let e,i,a,o;try{e=Yr.fromISO(r,t),i=e.isValid}catch(s){i=!1}try{a=Yr.fromISO(s,t),o=a.isValid}catch(s){o=!1}if(i&&o)return cr.fromDateTimes(e,a);if(i){var n=or.fromISO(s,t);if(n.isValid)return cr.after(e,n)}else if(o&&(n=or.fromISO(r,t)).isValid)return cr.before(a,n)}return cr.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static invalid(e,t){if(!e)throw new u("need to specify a reason the Interval is invalid");if(e=e instanceof Se?e:new Se(e,t),be.throwOnInvalid)throw new n(e);return new cr({invalid:e})}static isInterval(e){return!!e&&e._isLuxonInterval||!1}static merge(e){var[e,t]=e.sort(((e,t)=>e._s.valueOf()-t._s.valueOf())).reduce((([e,t],r)=>t?t.overlaps(r)||t.abutsStart(r)?[e,t.union(r)]:[e.concat([t]),r]:[e,r]),[[],null]);return t&&e.push(t),e}static xor(e){let t=null,r=0;var s=[];e=e.map((e=>[{time:e._s,type:"s"},{time:e._e,type:"e"}]));for(const n of Array.prototype.concat(...e).sort(((e,t)=>+e.time-+t.time)))r+="s"===n.type?1:-1,t=1===r?n.time:(t&&t.valueOf()!==n.time.valueOf()&&s.push(cr.fromDateTimes(t,n.time)),null);return cr.merge(s)}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Interval { start: ${this._s.toISO()}, end: ${this._e.toISO()} }`:`Interval { Invalid, reason: ${this.invalidReason} }`}abutsEnd(e){return+e._e==+this._s}abutsStart(e){return+this._e==+e._s}contains(e){return this._s<=e&&this._e>e}count(e="milliseconds",t){if(!this.isValid)return NaN;var r=this.start.startOf(e,t);let s;return s=(s=null!=t&&t.useLocaleWeeks?this.end.reconfigure({locale:r.locale}):this.end).startOf(e,t),Math.floor(s.diff(r,e).get(e))+ +(s.valueOf()!==this.end.valueOf())}difference(...e){return cr.xor([this].concat(e)).map((e=>this.intersection(e))).filter((e=>e&&!e.isEmpty()))}divideEqually(e){return this.isValid?this.splitBy({milliseconds:this.length()/e}).slice(0,e):[]}engulfs(e){return!!this.isValid&&this._s<=e._s&&this._e>=e._e}equals(e){return!(!this.isValid||!e.isValid)&&this._s.equals(e._s)&&this._e.equals(e._e)}hasSame(e){return!!this.isValid&&(this.isEmpty()||this._e.minus(1).hasSame(this._s,e))}intersection(e){var t;return this.isValid?(t=(this._s>e._s?this:e)._s,(e=(this._e<e._e?this:e)._e)<=t?null:cr.fromDateTimes(t,e)):this}isAfter(e){return!!this.isValid&&this._s>e}isBefore(e){return!!this.isValid&&this._e<=e}isEmpty(){return this._s.valueOf()===this._e.valueOf()}length(e="milliseconds"){return this.toDuration(e).get(e)}mapEndpoints(e){return cr.fromDateTimes(e(this._s),e(this._e))}overlaps(e){return this._e>e._s&&this._s<e._e}set({start:e,end:t}={}){return this.isValid?cr.fromDateTimes(e||this._s,t||this._e):this}splitAt(...e){var t=e.map(lr).filter((e=>this.contains(e))).sort(((e,t)=>e.toMillis()-t.toMillis())),r=[];let s=this._s,n=0;for(;s<this._e;){var i=+(i=t[n]||this._e)>+this._e?this._e:i;r.push(cr.fromDateTimes(s,i)),s=i,n+=1}return r}splitBy(e){var t=or.fromDurationLike(e);if(!this.isValid||!t.isValid||0===t.as("milliseconds"))return[];let r,s=this._s,n=1;for(var i=[];s<this._e;){var a=this.start.plus(t.mapUnits((e=>e*n)));r=+a>+this._e?this._e:a,i.push(cr.fromDateTimes(s,r)),s=r,n+=1}return i}toDuration(e="milliseconds",t={}){return this.isValid?this._e.diff(this._s,e,t):or.invalid(this._invalid.reason)}toFormat(e,{separator:t=" - "}={}){return this.isValid?""+this._s.toFormat(e)+t+this._e.toFormat(e):ur}toISO(e={}){return this.isValid?this._s.toISO(e)+"/"+this._e.toISO(e):ur}toISODate(){return this.isValid?this._s.toISODate()+"/"+this._e.toISODate():ur}toISOTime(e={}){return this.isValid?this._s.toISOTime(e)+"/"+this._e.toISOTime(e):ur}toLocaleString(e=_,t={}){return this.isValid?pt.create(this._s.loc.clone(t),e).formatInterval(this):ur}toString(){return this.isValid?`[${this._s.toISO()} – ${this._e.toISO()})`:ur}union(e){var t;return this.isValid?(t=(this._s<e._s?this:e)._s,e=(this._e>e._e?this:e)._e,cr.fromDateTimes(t,e)):this}}class hr{static eras(e="short",{locale:t}={}){return ue.create(t,void 0,"gregory").eras(e)}static features(){return{relative:$e(),localeWeek:Re()}}static getMinimumDaysInFirstWeek({locale:e,locObj:t}={}){return(t||ue.create(e)).getMinDaysInFirstWeek()}static getStartOfWeek({locale:e,locObj:t}={}){return(t||ue.create(e)).getStartOfWeek()}static getWeekendWeekdays({locale:e,locObj:t}={}){return(t||ue.create(e)).getWeekendDays().slice()}static hasDST(e=be.defaultZone){var t=Yr.now().setZone(e).set({month:12});return!e.isUniversal&&t.offset!==t.set({month:6}).offset}static isValidIANAZone(e){return g.isValidZone(e)}static meridiems({locale:e}={}){return ue.create(e).meridiems()}static months(e="long",{locale:t=null,locObj:r=null,numberingSystem:s=null,outputCalendar:n="gregory"}={}){return(r||ue.create(t,s,n)).months(e)}static monthsFormat(e="long",{locale:t,locObj:r,numberingSystem:s,outputCalendar:n="gregory"}={}){return(r||ue.create(t,s,n)).months(e,!0)}static normalizeZone(e){return fe(e,be.defaultZone)}static weekdays(e="long",{locale:t,locObj:r,numberingSystem:s}={}){return(r||ue.create(t,s)).weekdays(e)}static weekdaysFormat(e="long",{locale:t,locObj:r,numberingSystem:s}={}){return(r||ue.create(t,s)).weekdays(e,!0)}}function dr(e,t){var r=e=>e.toUTC(0,{keepLocalTime:!0}).startOf("days").valueOf();t=r(t)-r(e);return Math.floor(or.fromMillis(t).as("days"))}const mr={arab:"[٠-٩]",arabext:"[۰-۹]",bali:"[᭐-᭙]",beng:"[০-৯]",deva:"[०-९]",fullwide:"[０-９]",gujr:"[૦-૯]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[០-៩]",knda:"[೦-೯]",laoo:"[໐-໙]",limb:"[᥆-᥏]",mlym:"[൦-൯]",mong:"[᠐-᠙]",mymr:"[၀-၉]",orya:"[୦-୯]",tamldec:"[௦-௯]",telu:"[౦-౯]",thai:"[๐-๙]",tibt:"[༠-༩]",latn:"\\d"},fr={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]},yr=mr.hanidec.replace(/[\[|\]]/g,"").split("");function gr(e,t=""){return new RegExp(""+mr[e.numberingSystem||"latn"]+t)}function _r(e,t=(e=>e)){return{regex:e,deser:([e])=>t(function(e){var t=parseInt(e,10);if(!isNaN(t))return t;let r="";for(let t=0;t<e.length;t++){var s=e.charCodeAt(t);if(-1!==e[t].search(mr.hanidec))r+=yr.indexOf(e[t]);else for(const e in fr){var[n,i]=fr[e];if(n<=s&&s<=i){r+=s-n;break}}}return parseInt(r,10)}(e))}}const vr=`[ ${String.fromCharCode(160)}]`,pr=new RegExp(vr,"g");function wr(e){return e.replace(/\./g,"\\.?").replace(pr,vr)}function Or(e){return e.replace(/\./g,"").replace(pr," ").toLowerCase()}function kr(e,t){return{regex:RegExp(e.map(wr).join("|")),deser:([r])=>e.findIndex((e=>Or(r)===Or(e)))+t}}function br(e,t){return{regex:e,deser:([,e,t])=>ot(e,t),groups:t}}function Sr(e){return{regex:e,deser:([e])=>e}}const Tr={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayPeriod:"a",hour12:{numeric:"h","2-digit":"hh"},hour24:{numeric:"H","2-digit":"HH"},hour:{numeric:"h","2-digit":"hh"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"},timeZoneName:{long:"ZZZZZ",short:"ZZZ"}};let Nr;function Dr(e){return!!e&&!!e.invalidReason}function Mr(e,t){return Array.prototype.concat(...e.map((e=>{return r=t,e.literal||null==(r=jr(pt.macroTokenToFormatOpts(e.val),r))||r.includes(void 0)?e:r;var r})))}function Ir(e,t,r){var s=(r=Mr(pt.parseFormat(r),e)).map((t=>{{var r=t,s=e;const n=gr(s),i=gr(s,"{2}"),a=gr(s,"{3}"),o=gr(s,"{4}"),u=gr(s,"{6}"),l=gr(s,"{1,2}"),c=gr(s,"{1,3}"),h=gr(s,"{1,6}"),d=gr(s,"{1,9}"),m=gr(s,"{2,4}"),f=gr(s,"{4,6}"),y=e=>({regex:RegExp(e.val.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")),deser:([e])=>e,literal:!0});return t=(e=>{if(r.literal)return y(e);switch(e.val){case"G":return kr(s.eras("short"),0);case"GG":return kr(s.eras("long"),0);case"y":return _r(h);case"yy":case"kk":return _r(m,it);case"yyyy":case"kkkk":return _r(o);case"yyyyy":return _r(f);case"yyyyyy":return _r(u);case"M":case"L":case"d":case"H":case"h":case"m":case"q":case"s":case"W":return _r(l);case"MM":case"LL":case"dd":case"HH":case"hh":case"mm":case"qq":case"ss":case"WW":return _r(i);case"MMM":return kr(s.months("short",!0),1);case"MMMM":return kr(s.months("long",!0),1);case"LLL":return kr(s.months("short",!1),1);case"LLLL":return kr(s.months("long",!1),1);case"o":case"S":return _r(c);case"ooo":case"SSS":return _r(a);case"u":return Sr(d);case"a":return kr(s.meridiems(),0);case"E":case"c":return _r(n);case"EEE":return kr(s.weekdays("short",!1),1);case"EEEE":return kr(s.weekdays("long",!1),1);case"ccc":return kr(s.weekdays("short",!0),1);case"cccc":return kr(s.weekdays("long",!0),1);case"Z":case"ZZ":return br(new RegExp(`([+-]${l.source})(?::(${i.source}))?`),2);case"ZZZ":return br(new RegExp(`([+-]${l.source})(${i.source})?`),2);case"z":return Sr(/[a-z_+-/]{1,256}?/i);default:return y(e)}})(r)||{invalidReason:"missing Intl.DateTimeFormat.formatToParts support"},Object.assign(Object.assign({},t),{token:r})}}));if(n=s.find(Dr))return{input:t,tokens:r,invalidReason:n.invalidReason};var n=`^${s.map((e=>e.regex)).reduce(((e,t)=>`${e}(${t.source})`),"")}$`,[s,i]=(n=RegExp(n,"i"),function(e,t,r){const s=t.exec(e),n={};if(null!==s){let e=1;r.forEach((t=>{var r=t.groups?t.groups+1:1;t.literal||(n[t.token.val[0]]=t.deser(s.slice(e,e+r))),e+=r}))}return[s,n]}(t,n,s)),[a,u,l]=i?function(e){let t,r=null;return ze(e.z)&&(r=g.create(e.z)),ze(e.Z)&&(r=r||new ce(+e.Z),t=+e.Z),ze(e.q)&&(e.M=3*(e.q-1)+1),ze(e.h)&&(+e.h<12&&1===e.a?e.h=e.h+12:12===e.h&&0===e.a&&(e.h=0)),0===e.G&&e.y&&(e.y=-e.y),ze(e.u)&&(e.S=Qe(e.u)||0),[Object.keys(e).reduce(((t,r)=>{var s=(e=>{switch(e){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null}})(r);return s&&(t[s]=e[r]),t}),{}),r,t]}(i):[null,null,void 0];if("a"in i&&"H"in i)throw new o("Can't include meridiem when specifying 24-hour format");return{input:t,tokens:r,regex:n,rawMatches:s,matches:i,result:a,zone:u,specificOffset:l}}function Er(e){return e.replace(/\u202F/g," ")}function jr(e,t){if(!e)return null;var r=(t=pt.create(t,e).dtFormatter(Nr=void 0===Nr?Yr.fromMillis(1555555555555,{locale:t.locale}):Nr)).formatToParts();const s=t.resolvedOptions();return r.map((t=>{{var r=e,n=s,{type:t,value:i}=t;if("literal"===t)return{literal:!(a=/^\s+$/.test(i)),val:a?" ":i};var a=r[t];let o=t,u=("hour"===t&&(o=null!=r.hour12?r.hour12?"hour12":"hour24":null!=r.hourCycle?"h11"===r.hourCycle||"h12"===r.hourCycle?"hour12":"hour24":n.hour12?"hour12":"hour24"),Tr[o]);return(u="object"==typeof u?u[a]:u)?{literal:!1,val:u}:void 0}}))}const xr="Invalid DateTime";function Vr(e,t,r){var s=e-60*t*1e3,n=r.offset(s);return t===n?[s,t]:n===(r=r.offset(s-=60*(n-t)*1e3))?[s,n]:[e-60*Math.min(n,r)*1e3,Math.max(n,r)]}function Wr(e,t){return{year:(t=new Date(e+=60*t*1e3)).getUTCFullYear(),month:t.getUTCMonth()+1,day:t.getUTCDate(),hour:t.getUTCHours(),minute:t.getUTCMinutes(),second:t.getUTCSeconds(),millisecond:t.getUTCMilliseconds()}}function Cr(e,t,r){return Vr(rt(e),t,r)}function Fr(e,t,r,s,n,i){var{setZone:a,zone:o}=r;return e&&0!==Object.keys(e).length||t?(t=t||o,e=Yr.fromObject(e||void 0,Object.assign(Object.assign({},r),{zone:t,specificOffset:i})),a?e:e.setZone(o)):Yr.invalid(new Se("unparsable",`the input "${n}" can't be parsed as `+s))}function Zr(e,t,r=!0){return e.isValid?pt.create(ue.create("en-US"),{allowZ:r,forceSimple:!0}).formatDateTimeFromString(e,t):null}const Lr={year:0,month:1,day:1,hour:0,minute:0,second:0,millisecond:0},zr={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},Ar={ordinal:1,hour:0,minute:0,second:0,millisecond:0},qr=["year","month","day","hour","minute","second","millisecond"],Ur=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],$r=["year","ordinal","hour","minute","second","millisecond"];function Rr(e){var t=yt[e.toLowerCase()];if(t)return t;throw new i(e)}class Yr{get day(){return this.isValid?this._c.day:NaN}get daysInMonth(){return tt(this.year,this.month)}get daysInYear(){return this.isValid?et(this.year):NaN}get hour(){return this.isValid?this._c.hour:NaN}get invalidExplanation(){return this._invalid?this._invalid.explanation:void 0}get invalidReason(){return this._invalid?this._invalid.reason:void 0}get isInDST(){return!this.isOffsetFixed&&(this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset)}get isInLeapYear(){return Xe(this.year)}get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null}get isValid(){return null===this._invalid}get isWeekend(){return this.isValid&&this.loc.getWeekendDays().includes(this.weekday)}get loc(){return this.isValid?this._loc.clone():void 0}get localWeekNumber(){return this.isValid?this._possiblyCachedLocalWeekData(this).weekNumber:NaN}get localWeekYear(){return this.isValid?this._possiblyCachedLocalWeekData(this).weekYear:NaN}get localWeekday(){return this.isValid?this._possiblyCachedLocalWeekData(this).weekday:NaN}get locale(){return this.isValid?this._loc.locale:void 0}get millisecond(){return this.isValid?this._c.millisecond:NaN}get minute(){return this.isValid?this._c.minute:NaN}get month(){return this.isValid?this._c.month:NaN}get monthLong(){return this.isValid?hr.months("long",{locObj:this._loc})[this.month-1]:null}get monthShort(){return this.isValid?hr.months("short",{locObj:this._loc})[this.month-1]:null}get numberingSystem(){return this.isValid?this._loc.numberingSystem:void 0}get offset(){return this.isValid?+this._o:NaN}get offsetNameLong(){return this.isValid?this.zone.offsetName(this._ts,{format:"long",locale:this.locale}):null}get offsetNameShort(){return this.isValid?this.zone.offsetName(this._ts,{format:"short",locale:this.locale}):null}get ordinal(){return this.isValid?Ve(this._c).ordinal:NaN}get outputCalendar(){return this.isValid?this._loc.outputCalendar:void 0}get quarter(){return this.isValid?Math.ceil(this._c.month/3):NaN}get second(){return this.isValid?this._c.second:NaN}get ts(){return this._ts}get weekNumber(){return this.isValid?this._possiblyCachedWeekData(this).weekNumber:NaN}get weekYear(){return this.isValid?this._possiblyCachedWeekData(this).weekYear:NaN}get weekday(){return this.isValid?this._possiblyCachedWeekData(this).weekday:NaN}get weekdayLong(){return this.isValid?hr.weekdays("long",{locObj:this._loc})[this.weekday-1]:null}get weekdayShort(){return this.isValid?hr.weekdays("short",{locObj:this._loc})[this.weekday-1]:null}get weeksInLocalWeekYear(){return this.isValid?nt(this.localWeekYear,this.loc.getMinDaysInFirstWeek(),this.loc.getStartOfWeek()):NaN}get weeksInWeekYear(){return this.isValid?nt(this.weekYear):NaN}get year(){return this.isValid?this._c.year:NaN}get zone(){return this._zone}get zoneName(){return this.isValid?this.zone.name:null}constructor(e){var t,r=e.zone||be.defaultZone;let s,n,i=e.invalid||(Number.isNaN(e.ts)?new Se("invalid timestamp"):null)||(r.isValid?null:Yr._unsupportedZone(r));this._ts=Ae(e.ts)?be.now():e.ts,i||(e.old&&e.old.ts===this._ts&&e.old.zone.equals(r)?[n,s]=[e.old.c,e.old.o]:(t=r.offset(this._ts),n=Wr(this._ts,t),i=Number.isNaN(n.year)?new Se("invalid input"):null,n=i?void 0:n,s=i?void 0:t)),this._zone=r,this._loc=e.loc||ue.create(),this._invalid=i,this._weekData=null,this._c=n,this._o=s,this._isLuxonDateTime=!0}static expandFormat(e,t={}){return Mr(pt.parseFormat(e),ue.fromObject(t)).map((e=>e.val)).join("")}static fromFormat(e,t,r={}){if(Ae(e)||Ae(t))throw new u("fromFormat requires an input string and a format");var{locale:s,numberingSystem:n}=r,[s,n,i,a]=function(e,t,r){var{result:e,zone:t,specificOffset:r,invalidReason:s}=Ir(e,Er(t),Er(r));return[e,t,r,s]}(ue.fromOpts({locale:s,numberingSystem:n,defaultToEN:!0}),e,t);return a?Yr.invalid(a):Fr(s,n||null,r,"format "+t,e,i)}static fromFormatExplain(e,t,r={}){var{locale:r,numberingSystem:s}=r;return Ir(ue.fromOpts({locale:r,numberingSystem:s,defaultToEN:!0}),e,t)}static fromHTTP(e,t={}){var[r,s]=kt(e,[Ut,Yt],[$t,Yt],[Rt,Pt]);return Fr(r,s,t,"HTTP",e)}static fromISO(e,t={}){var[r,s]=kt(e,[Ht,Qt],[Jt,Kt],[Gt,Xt],[Bt,er]);return Fr(r,s,t,"ISO 8601",e)}static fromJSDate(e,t={}){var r;e="[object Date]"===Object.prototype.toString.call(e)?e.valueOf():NaN;return Number.isNaN(e)?Yr.invalid("invalid input"):(r=fe(t.zone,be.defaultZone)).isValid?new Yr({ts:e,zone:r,loc:ue.fromObject(t)}):Yr.invalid(Yr._unsupportedZone(r))}static fromMillis(e,t={}){if(qe(e))return e<-864e13||864e13<e?Yr.invalid("Timestamp out of range"):new Yr({ts:e,zone:fe(t.zone,be.defaultZone),loc:ue.fromObject(t)});throw new u(`fromMillis requires a numerical input, but received a ${typeof e} with value `+e)}static fromObject(e={},t={}){var r=fe(t.zone,be.defaultZone);if(!r.isValid)return Yr.invalid(Yr._unsupportedZone(r));var s=ue.fromObject(t),n=lt(e,Rr),i=be.now(),a=(t=qe(t.specificOffset)?t.specificOffset:r.offset(i),ze(n.ordinal)),u=ze(n.year),l=ze(n.month)||ze(n.day),c=(u=u||l,n.weekYear||n.weekNumber);if((u||a)&&c)throw new o("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(l&&a)throw new o("Can't mix ordinal dates with month/day");l=c||n.weekday&&!u;var{minDaysInFirstWeek:c,startOfWeek:h}=Le(n,s);i=Wr(i,t),u={containsGregor:u,containsOrdinal:a,loc:s,normalized:n,obj:e,offsetProvis:t,useWeekData:l,zoneToUse:r};return l?Yr._buildObject(u,Ur,zr,je(i,c,h)):a?Yr._buildObject(u,$r,Ar,Ve(i)):Yr._buildObject(u,qr,Lr,i)}static fromRFC2822(e,t={}){var[r,s]=kt(e.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim(),[At,qt]);return Fr(r,s,t,"RFC 2822",e)}static fromSQL(e,t={}){var[r,s]=kt(e,[tr,Qt],[rr,sr]);return Fr(r,s,t,"SQL",e)}static fromSeconds(e,t={}){if(qe(e))return new Yr({ts:1e3*e,zone:fe(t.zone,be.defaultZone),loc:ue.fromObject(t)});throw new u("fromSeconds requires a numerical input")}static fromString(e,t,r={}){return Yr.fromFormat(e,t,r)}static fromStringExplain(e,t,r={}){return Yr.fromFormatExplain(e,t,r)}static invalid(e,t){if(!e)throw new u("need to specify a reason the DateTime is invalid");if(e=e instanceof Se?e:new Se(e,t),be.throwOnInvalid)throw new r(e);return new Yr({invalid:e})}static isDateTime(e){return!(!e||!e._isLuxonDateTime)}static local(...e){var[e,t]=this._lastOpts(e),[t,r,s,n,i,a,o]=t;return Yr._quickDT({year:t,month:r,day:s,hour:n,minute:i,second:a,millisecond:o},e)}static max(...e){if(e.every(Yr.isDateTime))return Ye(e,(e=>e.valueOf()),Math.max);throw new u("max requires all arguments be DateTimes")}static min(...e){if(e.every(Yr.isDateTime))return Ye(e,(e=>e.valueOf()),Math.min);throw new u("min requires all arguments be DateTimes")}static now(){return new Yr({})}static parseFormatForOpts(e,t={}){return(e=jr(e,ue.fromObject(t)))?e.map((e=>e?e.val:null)).join(""):null}static utc(...e){var[e,t]=this._lastOpts(e),[t,r,s,n,i,a,o]=t;return e.zone=ce.utcInstance,this._quickDT({year:t,month:r,day:s,hour:n,minute:i,second:a,millisecond:o},e)}static _buildObject(e,t,r,s){let n=!1;var i,a,o,u;return t.forEach((t=>{ze(e.normalized[t])?n=!0:e.normalized[t]=n?r[t]:s[t]})),(t=(e.useWeekData?(i=4,a=1,o=Ue((t=e.normalized).weekYear),i=He(t.weekNumber,1,nt(t.weekYear,i,a)),a=He(t.weekday,1,7),o?i?!a&&De("weekday",t.weekday):De("week",t.weekNumber):De("weekYear",t.weekYear)):e.containsOrdinal?(i=Ue((o=e.normalized).year),a=He(o.ordinal,1,et(o.year)),i?!a&&De("ordinal",o.ordinal):De("year",o.year)):Ce(e.normalized))||Fe(e.normalized))?Yr.invalid(t):([t,u]=Cr(e.useWeekData?xe(e.normalized):e.containsOrdinal?We(e.normalized):e.normalized,e.offsetProvis,e.zoneToUse),t=new Yr({ts:t,zone:e.zoneToUse,o:u,loc:e.loc}),e.normalized.weekday&&e.containsGregor&&e.obj.weekday!==t.weekday?Yr.invalid("mismatched weekday",`you can't specify both a weekday of ${e.normalized.weekday} and a date of `+t.toISO()):t.isValid?t:Yr.invalid(t._invalid))}static _diffRelative(e,t,r){const s=!!Ae(r.round)||r.round,n=(e,n)=>(e=Ke(e,s||r.calendary?0:2,!0),t._loc.clone(r).relFormatter(r).format(e,n)),i=s=>r.calendary?t.hasSame(e,s)?0:t.startOf(s).diff(e.startOf(s),s).get(s):t.diff(e,s).get(s);if(r.unit)return n(i(r.unit),r.unit);for(const e of r.units){var a=i(e);if(1<=Math.abs(a))return n(a,e)}return n(t<e?-0:0,r.units[r.units.length-1])}static _lastOpts(e){let t,r={};return t=0<e.length&&"object"==typeof e[e.length-1]?(r=e.pop(),e):Array.from(e),[r,t]}static _quickDT(e,t){var r=fe(t.zone,be.defaultZone),s=(t=ue.fromObject(t),be.now());let n,i;if(ze(e.year)){for(const t of qr)Ae(e[t])&&(e[t]=Lr[t]);var a=Ce(e)||Fe(e);if(a)return Yr.invalid(a);a=r.offset(s),[n,i]=Cr(e,a,r)}else n=s;return new Yr({ts:n,zone:r,loc:t,o:i})}static _unsupportedZone(e){return new Se("unsupported zone",`the zone "${e.name}" is not supported`)}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`DateTime { ts: ${this.toISO()}, zone: ${this.zone.name}, locale: ${this.locale} }`:`DateTime { Invalid, reason: ${this.invalidReason} }`}diff(e,t="milliseconds",r={}){var s,n,i;return this.isValid&&e.isValid?(t=(Array.isArray(t)?t:[t]).map(or.normalizeUnit),i=((e,t,r,s)=>{let[n,i,a,o]=function(e,t,r){var s,n,i={},a=e;let o,u;for([s,n]of[["years",(e,t)=>t.year-e.year],["quarters",(e,t)=>t.quarter-e.quarter+4*(t.year-e.year)],["months",(e,t)=>t.month-e.month+12*(t.year-e.year)],["weeks",(e,t)=>((e=dr(e,t))-e%7)/7],["days",dr]])0<=r.indexOf(s)&&(i[o=s]=n(e,t),(u=a.plus(i))>t?(i[s]--,t<(e=a.plus(i))&&(u=e,i[s]--,e=a.plus(i))):e=u);return[e,i,u,o]}(e,t,r);return e=+t-+n,r=r.filter((e=>0<=["hours","minutes","seconds","milliseconds"].indexOf(e))),0===r.length&&(a=a<t?n.plus({[o]:1}):a)!==n&&(i[o]=(i[o]||0)+e/(+a-+n)),t=or.fromObject(i,s),0<r.length?or.fromMillis(e,s).shiftTo(...r).plus(t):t})(i=(s=e.valueOf()>this.valueOf())?this:e,n=s?e:this,t,Object.assign({locale:this.locale,numberingSystem:this.numberingSystem},r)),s?i.negate():i):(n=this.invalidReason||e.invalidReason,or.invalid(n,"created by diffing an invalid DateTime"))}diffNow(e="milliseconds",t={}){return this.diff(Yr.now(),e,t)}endOf(e,{useLocaleWeeks:t=!1}={}){return this.plus({[e]:1}).startOf(e,{useLocaleWeeks:t}).minus({milliseconds:1})}equals(e){return this.valueOf()===e.valueOf()&&this.zone.equals(e.zone)&&this._loc.equals(e._loc)}get(e){return this[e]}getPossibleOffsets(){var e,t,r,s;return this.isValid&&!this.isOffsetFixed&&(e=rt(this._c),r=this.zone.offset(e-864e5),s=this.zone.offset(e+864e5),(r=this.zone.offset(e-6e4*r))!==(s=this.zone.offset(e-6e4*s)))&&(t=e-6e4*s,r=Wr(e-=6e4*r,r),s=Wr(t,s),r.hour===s.hour)&&r.minute===s.minute&&r.second===s.second&&r.millisecond===s.millisecond?[this._clone({ts:e}),this._clone({ts:t})]:[this]}hasSame(e,t,r){var s;return!!this.isValid&&(s=e.valueOf(),+(e=this.setZone(e.zone,{keepLocalTime:!0})).startOf(t)<=s)&&s<=+e.endOf(t,r)}minus(e){return this.isValid?(e=or.fromDurationLike(e).negate(),this._clone(this._adjustTime(e))):this}plus(e){return this.isValid?(e=or.fromDurationLike(e),this._clone(this._adjustTime(e))):this}reconfigure(e){return e=this._loc.clone(e),this._clone({loc:e})}resolvedLocaleOptions(e={}){var{locale:e,numberingSystem:t,calendar:r}=pt.create(this._loc.clone(e),e).resolvedOptions(this);return{locale:e,numberingSystem:t,outputCalendar:r}}set(e){if(!this.isValid)return this;e=lt(e,Rr);var{minDaysInFirstWeek:t,startOfWeek:r}=Le(e,this.loc),s=ze(e.weekYear)||ze(e.weekNumber)||ze(e.weekday),n=ze(e.ordinal),i=ze(e.year),a=ze(e.month)||ze(e.day),u=e.weekYear||e.weekNumber;if((i||a||n)&&u)throw new o("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(a&&n)throw new o("Can't mix ordinal dates with month/day");let l;s?l=xe(Object.assign(Object.assign({},je(this._c,t,r)),e),t,r):Ae(e.ordinal)?(l=Object.assign(Object.assign({},this.toObject()),e),Ae(e.day)&&(l.day=Math.min(tt(l.year,l.month),l.day))):l=We(Object.assign(Object.assign({},Ve(this._c)),e));var[i,u]=Cr(l,this._o,this.zone);return this._clone({ts:i,o:u})}setLocale(e){return this.reconfigure({locale:e})}setZone(e,{keepLocalTime:t=!1,keepCalendarTime:r=!1}={}){if((e=fe(e,be.defaultZone)).equals(this.zone))return this;if(e.isValid){let s=this._ts;return(t||r)&&(t=e.offset(this._ts),s=Cr(r=this.toObject(),t,e)[0]),this._clone({ts:s,zone:e})}return Yr.invalid(Yr._unsupportedZone(e))}startOf(e,{useLocaleWeeks:t=!1}={}){if(!this.isValid)return this;var r,s={};switch(e=or.normalizeUnit(e)){case"years":s.month=1;case"quarters":case"months":s.day=1;case"weeks":case"days":s.hour=0;case"hours":s.minute=0;case"minutes":s.second=0;case"seconds":s.millisecond=0}return"weeks"===e&&(t?(t=this.loc.getStartOfWeek(),(r=this.weekday)<t&&(s.weekNumber=this.weekNumber-1),s.weekday=t):s.weekday=1),"quarters"===e&&(r=Math.ceil(this.month/3),s.month=3*(r-1)+1),this.set(s)}toBSON(){return this.toJSDate()}toFormat(e,t={}){return this.isValid?pt.create(this._loc.redefaultToEN(t)).formatDateTimeFromString(this,e):xr}toHTTP(){return Zr(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'")}toISO({format:e="extended",suppressSeconds:t=!1,suppressMilliseconds:r=!1,includeOffset:s=!0,extendedZone:n=!1}={}){return this.isValid?[this._toISODate(e="extended"===e),"T",this._toISOTime(e,t,r,s,n)].join(""):null}toISODate({format:e="extended"}={format:"extended"}){return this.isValid?this._toISODate("extended"===e):null}toISOTime({suppressMilliseconds:e=!1,suppressSeconds:t=!1,includeOffset:r=!0,includePrefix:s=!1,extendedZone:n=!1,format:i="extended"}={}){return this.isValid?[s?"T":"",this._toISOTime("extended"===i,t,e,r,n)].join(""):null}toISOWeekDate(){return Zr(this,"kkkk-'W'WW-c")}toJSDate(){return new Date(this.isValid?this._ts:NaN)}toJSON(){return this.toISO()}toLocal(){return this.setZone(be.defaultZone)}toLocaleParts(e={}){return this.isValid?pt.create(this._loc.clone(e),e).formatDateTimeParts(this):[]}toLocaleString(e=_,t={}){return this.isValid?pt.create(this._loc.clone(t),e).formatDateTime(this):xr}toMillis(){return this.isValid?this.ts:NaN}toObject(e={includeConfig:!1}){var t;return this.isValid?(t=Object.assign({},this._c),e.includeConfig&&(t.outputCalendar=this.outputCalendar,t.numberingSystem=this._loc.numberingSystem,t.locale=this._loc.locale),t):{}}toRFC2822(){return Zr(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",!1)}toRelative(e={}){if(!this.isValid)return null;var t=e.base||Yr.fromObject({},{zone:this.zone}),r=e.padding?this<t?-e.padding:e.padding:0;let s=["years","months","days","hours","minutes","seconds"],n=e.unit;return Array.isArray(e.unit)&&(s=e.unit,n=void 0),Yr._diffRelative(t,this.plus(r),Object.assign(Object.assign({},e),{numeric:"always",units:s,unit:n}))}toRelativeCalendar(e={}){return this.isValid?Yr._diffRelative(e.base||Yr.fromObject({},{zone:this.zone}),this,Object.assign(Object.assign({},e),{numeric:"auto",units:["years","months","days"],calendary:!0})):null}toSQL(e={}){return this.isValid?this.toSQLDate()+" "+this.toSQLTime(e):null}toSQLDate(){return this.isValid?this._toISODate(!0):null}toSQLTime({includeOffset:e=!0,includeZone:t=!1,includeOffsetSpace:r=!0}={}){let s="HH:mm:ss.SSS";return(t||e)&&(r&&(s+=" "),t?s+="z":e&&(s+="ZZ")),Zr(this,s,!0)}toSeconds(){return this.isValid?this._ts/1e3:NaN}toString(){return this.isValid?this.toISO():xr}toUTC(e=0,t={}){return this.setZone(ce.instance(e),t)}toUnixInteger(){return this.isValid?Math.floor(this.ts/1e3):NaN}until(e){return cr.fromDateTimes(this,e)}valueOf(){return this.toMillis()}_adjustTime(e){var t=this._o,r=this._c.year+Math.trunc(e.years),s=this._c.month+Math.trunc(e.months)+3*Math.trunc(e.quarters);r=Object.assign(Object.assign({},this._c),{year:r,month:s,day:Math.min(this._c.day,tt(r,s))+Math.trunc(e.days)+7*Math.trunc(e.weeks)}),s=or.fromObject({years:e.years-Math.trunc(e.years),quarters:e.quarters-Math.trunc(e.quarters),months:e.months-Math.trunc(e.months),weeks:e.weeks-Math.trunc(e.weeks),days:e.days-Math.trunc(e.days),hours:e.hours,minutes:e.minutes,seconds:e.seconds,milliseconds:e.milliseconds}).as("milliseconds");let[n,i]=Vr(rt(r),t,this.zone);return 0!==s&&(n+=s,i=this.zone.offset(n)),{ts:n,o:i}}_clone(e){var t={ts:this._ts,zone:this.zone,c:this._c,o:this._o,loc:this._loc,invalid:this._invalid||void 0};return new Yr(Object.assign(Object.assign(Object.assign({},t),e),{old:t}))}_possiblyCachedLocalWeekData(e){return e._localWeekData||(e._localWeekData=je(e._c,e.loc.getMinDaysInFirstWeek(),e.loc.getStartOfWeek())),e._localWeekData}_possiblyCachedWeekData(e){return null===e._weekData&&(e._weekData=je(e._c)),e._weekData}_toISODate(e){var t=9999<this._c.year||this._c.year<0;let r="";return t&&0<=this._c.year&&(r+="+"),r+=Je(this._c.year,t?6:4),e?(r=(r+="-")+Je(this._c.month)+"-")+Je(this._c.day):(r+=Je(this._c.month))+Je(this._c.day)}_toISOTime(e,t,r,s,n){let i=Je(this._c.hour);return e?(i=(i+=":")+Je(this._c.minute),0===this._c.millisecond&&0===this._c.second&&t||(i+=":")):i+=Je(this._c.minute),0===this._c.millisecond&&0===this._c.second&&t||(i+=Je(this._c.second),0===this._c.millisecond&&r)||(i=(i+=".")+Je(this._c.millisecond,3)),s&&(this.isOffsetFixed&&0===this.offset&&!n?i+="Z":i=this._o<0?(i=(i+="-")+Je(Math.trunc(-this._o/60))+":")+Je(Math.trunc(-this._o%60)):(i=(i+="+")+Je(Math.trunc(this._o/60))+":")+Je(Math.trunc(this._o%60))),n&&(i+="["+this.zone.ianaName+"]"),i}}Yr.DATETIME_FULL=C,Yr.DATETIME_FULL_WITH_SECONDS=F,Yr.DATETIME_HUGE=Z,Yr.DATETIME_HUGE_WITH_SECONDS=L,Yr.DATETIME_MED=x,Yr.DATETIME_MED_WITH_SECONDS=V,Yr.DATETIME_MED_WITH_WEEKDAY=W,Yr.DATETIME_SHORT=E,Yr.DATETIME_SHORT_WITH_SECONDS=j,Yr.DATE_FULL=w,Yr.DATE_HUGE=O,Yr.DATE_MED=v,Yr.DATE_MED_WITH_WEEKDAY=p,Yr.DATE_SHORT=_,Yr.TIME_24_SIMPLE=N,Yr.TIME_24_WITH_LONG_OFFSET=I,Yr.TIME_24_WITH_SECONDS=D,Yr.TIME_24_WITH_SHORT_OFFSET=M,Yr.TIME_SIMPLE=k,Yr.TIME_WITH_LONG_OFFSET=T,Yr.TIME_WITH_SECONDS=b,Yr.TIME_WITH_SHORT_OFFSET=S,e.DateTime=Yr,e.Duration=or,e.FixedOffsetZone=ce,e.IANAZone=g,e.Info=hr,e.Interval=cr,e.Intl=d,e.InvalidZone=he,e.ORDERED_UNITS=dt,e.REVERSE_ORDERED_UNITS=mt,e.Settings=be,e.SystemZone=me,e.VERSION="4.5.2",e.Zone=h,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
